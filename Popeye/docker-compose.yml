version: "3"

services: 
    poll:
        container_name: docker-poll
        restart: unless-stopped
        build:
            context: ./poll
            dockerfile: Dockerfile
        ports: 
            - '5000:80'
        networks:
            - poll-tier
        depends_on:
            - redis
        environment:
            - REDIS_HOST=redis
    redis:
        container_name: docker-redis
        restart: always
        image: redis:latest
        ports: 
            - '6379:6379'
        networks:
            - back-tier
            - poll-tier
    worker:
        container_name: docker-worker
        restart: always
        build: 
            context: ./worker
            dockerfile: Dockerfile
        networks:
            - back-tier
        depends_on:
            - redis
            - db
        environment:
            - REDIS_HOST=redis
            - POSTGRES_USER=docker
            - POSTGRES_PASSWORD=docker
            - POSTGRES_DB=devops-db
            - POSTGRES_HOST=db
    db:
        container_name: docker-db
        restart: always
        image: postgres:latest
        environment:
            - POSTGRES_USER=docker
            - POSTGRES_PASSWORD=docker
            - POSTGRES_DB=devops-db
        volumes:
            - db-data:/var/lib/pgsql/data
            - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
        networks:
            - back-tier
            - result-tier
    result:
        container_name: docker-result
        restart: always
        build: 
            context: ./result
            dockerfile: Dockerfile
        ports: 
            - '5001:80'
        networks:
            - result-tier
        depends_on:
            - db
        environment:
            - POSTGRES_USER=docker
            - POSTGRES_PASSWORD=docker
            - POSTGRES_DB=devops-db
            - POSTGRES_HOST=db

volumes:
    db-data:

networks:
    poll-tier:
    result-tier:
    back-tier: